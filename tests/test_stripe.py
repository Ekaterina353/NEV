import os
import sys
from decimal import Decimal

import django

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–æ Stripe
"""


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings")
django.setup()

from materials.models import Course, Lesson
from users.models import User
from users.services import StripeService


def test_stripe_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–æ Stripe"""

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–æ Stripe...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Stripe
        from django.conf import settings

        if (
            not settings.STRIPE_SECRET_KEY
            or settings.STRIPE_SECRET_KEY == "sk_test_..."
        ):
            print("‚ùå STRIPE_SECRET_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings.py")
            return False

        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Stripe –Ω–∞–π–¥–µ–Ω—ã")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞...")
        product_data = StripeService.create_product(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—Å", description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞"
        )
        print(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω: {product_data['id']}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—ã
        print("\nüí∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω—ã...")
        price_data = StripeService.create_price(
            product_id=product_data["id"], amount=Decimal("1000.00")
        )
        print(f"‚úÖ –¶–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞: {price_data['id']}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        print("\nüõí –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –æ–ø–ª–∞—Ç—ã...")
        session_data = StripeService.create_checkout_session(
            price_id=price_data["id"],
            success_url="https://example.com/success",
            cancel_url="https://example.com/cancel",
            metadata={"test": "true"},
        )
        print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {session_data['id']}")
        print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É: {session_data['url']}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏...")
        status_data = StripeService.get_session_status(session_data["id"])
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω: {status_data['payment_status']}")

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False


def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""

    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
        import requests

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
        response = requests.get("http://localhost:8000/api/schema/")
        if response.status_code == 200:
            print("‚úÖ API Schema –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå API Schema –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Swagger UI
        response = requests.get("http://localhost:8000/api/docs/")
        if response.status_code == 200:
            print("‚úÖ Swagger UI –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå Swagger UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

        print("\nüìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å–∞–º:")
        print("   - Swagger UI: http://localhost:8000/api/docs/")
        print("   - ReDoc: http://localhost:8000/api/redoc/")
        print("   - Schema: http://localhost:8000/api/schema/")

    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python manage.py runserver")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Stripe
    stripe_success = test_stripe_integration()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_api_endpoints()

    if stripe_success:
        print("\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ stripe: pip install stripe")
        print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–ª—é—á–∏ Stripe –≤ .env —Ñ–∞–π–ª–µ")
        print("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: python manage.py migrate")
        print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
        print("5. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: http://localhost:8000/api/docs/")
    else:
        print("\n‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        sys.exit(1)
